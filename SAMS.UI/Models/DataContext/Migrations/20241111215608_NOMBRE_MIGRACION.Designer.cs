// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SAMS.UI.Models.DataContext;

#nullable disable

namespace SAMS.UI.Models.DataContext.Migrations
{
    [DbContext(typeof(SAMSContext))]
    [Migration("20241111215608_NOMBRE_MIGRACION")]
    partial class NOMBRE_MIGRACION
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductoInventario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidadBodega")
                        .HasColumnType("int");

                    b.Property<int>("cantidadExhibicion")
                        .HasColumnType("int");

                    b.Property<int>("categoriaId")
                        .HasColumnType("int");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("esDevolvible")
                        .HasColumnType("bit");

                    b.Property<bool>("esPerecedero")
                        .HasColumnType("bit");

                    b.Property<int>("estadoProductoId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precioActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("promocionId")
                        .HasColumnType("int");

                    b.Property<bool>("ubicacion")
                        .HasColumnType("bit");

                    b.Property<int>("unidadDeMedidaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("categoriaId");

                    b.HasIndex("estadoProductoId");

                    b.HasIndex("promocionId");

                    b.HasIndex("unidadDeMedidaId");

                    b.ToTable("ProductoInventario");
                });

            modelBuilder.Entity("SAMS.UI.DTO.SP_ReporteVentaResult", b =>
                {
                    b.Property<DateTime>("fechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("noCaja")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("noVenta")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("total")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable((string)null);

                    b.ToView("SP_ReporteVentaResult", (string)null);
                });

            modelBuilder.Entity("SAMS.UI.DTO.V_EmpleadoDetalle", b =>
                {
                    b.Property<string>("apellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellidoPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noempleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("puesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rfc")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("V_EmpleadoDetalle", (string)null);
                });

            modelBuilder.Entity("SAMS.UI.DTO.V_Empleados", b =>
                {
                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("puesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rfc")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("V_Empleados", (string)null);
                });

            modelBuilder.Entity("SAMS.UI.DTO.V_Producto", b =>
                {
                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("V_Producto", (string)null);
                });

            modelBuilder.Entity("SAMS.UI.DTO.V_ProductoInventario", b =>
                {
                    b.Property<int>("cantidadBodega")
                        .HasColumnType("int");

                    b.Property<int>("cantidadExhibicion")
                        .HasColumnType("int");

                    b.Property<int>("id")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precioActual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("ubicacion")
                        .HasColumnType("bit");

                    b.ToTable((string)null);

                    b.ToView("V_ProductoInventario", (string)null);
                });

            modelBuilder.Entity("SAMS.UI.DTO.V_Promocion", b =>
                {
                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("porcentajeDescuento")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("V_Promocion", (string)null);
                });

            modelBuilder.Entity("SAMS.UI.DTO.V_Proveedores", b =>
                {
                    b.Property<bool>("estadoProveedor")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rfc")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("V_Proveedores", (string)null);
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Caja", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("horaDeCorte")
                        .HasColumnType("datetime2");

                    b.Property<string>("noCaja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Caja");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Categoria", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<bool>("estado")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.DetallePedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaCaducidad")
                        .HasColumnType("datetime2");

                    b.Property<int>("pedidoId")
                        .HasColumnType("int");

                    b.Property<decimal>("precioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("productoId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("pedidoId");

                    b.HasIndex("productoId");

                    b.ToTable("DetallePedido");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.DetalleVenta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("ganancia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("precioVenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("productoInventarioId")
                        .HasColumnType("int");

                    b.Property<int>("ventaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productoInventarioId");

                    b.HasIndex("ventaId");

                    b.ToTable("DetalleVenta");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Empleado", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("apellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("apellidoPaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("noEmpleado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("puestoId")
                        .HasColumnType("int");

                    b.Property<string>("rfc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("puestoId");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.EstadoPedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EstadoPedido");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.EstadoProducto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("EstadoProducto");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Merma", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<int>("productoInventarioId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("productoInventarioId");

                    b.ToTable("Merma");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Monedero", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("codigoDeBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Monedero");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Pedido", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("estadoPedidoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaPedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("noPedido")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("estadoPedidoId");

                    b.ToTable("Pedido");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("esDevolvible")
                        .HasColumnType("bit");

                    b.Property<bool>("esPerecedero")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("proveedorId")
                        .HasColumnType("int");

                    b.Property<int>("unidadDeMedidaId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("proveedorId");

                    b.HasIndex("unidadDeMedidaId");

                    b.ToTable("Producto");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Promocion", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cantMaxima")
                        .HasColumnType("int");

                    b.Property<int>("cantMinima")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("porcentajeDescuento")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Promocion");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.PromocionVigencia", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<DateTime>("fechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("promocionId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("promocionId");

                    b.ToTable("PromocionVigencia");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Proveedor", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("estadoProveedor")
                        .HasColumnType("bit");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rfc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Proveedor");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Puesto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("Puesto");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.UnidadDeMedida", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("UnidadDeMedida");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Venta", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("cajaId")
                        .HasColumnType("int");

                    b.Property<int>("empleadoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("fechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("iva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("monederoId")
                        .HasColumnType("int");

                    b.Property<int>("noVenta")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("cajaId");

                    b.HasIndex("empleadoId");

                    b.HasIndex("monederoId");

                    b.ToTable("Venta");
                });

            modelBuilder.Entity("ProductoInventario", b =>
                {
                    b.HasOne("SAMS.UI.Models.Entities.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.UI.Models.Entities.EstadoProducto", "estadoProducto")
                        .WithMany()
                        .HasForeignKey("estadoProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.UI.Models.Entities.Promocion", "promocion")
                        .WithMany()
                        .HasForeignKey("promocionId");

                    b.HasOne("SAMS.UI.Models.Entities.UnidadDeMedida", "unidadMerma")
                        .WithMany()
                        .HasForeignKey("unidadDeMedidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");

                    b.Navigation("estadoProducto");

                    b.Navigation("promocion");

                    b.Navigation("unidadMerma");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.DetallePedido", b =>
                {
                    b.HasOne("SAMS.UI.Models.Entities.Pedido", "pedido")
                        .WithMany()
                        .HasForeignKey("pedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.UI.Models.Entities.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("productoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.DetalleVenta", b =>
                {
                    b.HasOne("ProductoInventario", "productoInventario")
                        .WithMany()
                        .HasForeignKey("productoInventarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.UI.Models.Entities.Venta", "venta")
                        .WithMany()
                        .HasForeignKey("ventaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productoInventario");

                    b.Navigation("venta");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Empleado", b =>
                {
                    b.HasOne("SAMS.UI.Models.Entities.Puesto", "puesto")
                        .WithMany()
                        .HasForeignKey("puestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("puesto");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Merma", b =>
                {
                    b.HasOne("ProductoInventario", "productoInventario")
                        .WithMany()
                        .HasForeignKey("productoInventarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("productoInventario");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Pedido", b =>
                {
                    b.HasOne("SAMS.UI.Models.Entities.EstadoPedido", "estadoPedido")
                        .WithMany()
                        .HasForeignKey("estadoPedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("estadoPedido");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Producto", b =>
                {
                    b.HasOne("SAMS.UI.Models.Entities.Proveedor", "proveedor")
                        .WithMany()
                        .HasForeignKey("proveedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.UI.Models.Entities.UnidadDeMedida", "unidadDeMedida")
                        .WithMany()
                        .HasForeignKey("unidadDeMedidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("proveedor");

                    b.Navigation("unidadDeMedida");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.PromocionVigencia", b =>
                {
                    b.HasOne("SAMS.UI.Models.Entities.Promocion", "promocion")
                        .WithMany()
                        .HasForeignKey("promocionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("promocion");
                });

            modelBuilder.Entity("SAMS.UI.Models.Entities.Venta", b =>
                {
                    b.HasOne("SAMS.UI.Models.Entities.Caja", "caja")
                        .WithMany()
                        .HasForeignKey("cajaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.UI.Models.Entities.Empleado", "empleado")
                        .WithMany()
                        .HasForeignKey("empleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SAMS.UI.Models.Entities.Monedero", "monedero")
                        .WithMany()
                        .HasForeignKey("monederoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("caja");

                    b.Navigation("empleado");

                    b.Navigation("monedero");
                });
#pragma warning restore 612, 618
        }
    }
}
